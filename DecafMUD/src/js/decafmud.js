/*! For license information please see decafmud.js.LICENSE.txt */
void 0===String.prototype.endsWith&&(String.prototype.endsWith=function(t){var e=this.length-t.length;return!(e<0)&&this.lastIndexOf(t,e)===e}),void 0===String.prototype.substr_count&&(String.prototype.substr_count=function(t){for(var e=0,i=this.indexOf(t);-1!==i;)e++,i=this.indexOf(t,i+1);return e}),void 0===Array.prototype.indexOf&&(Array.prototype.indexOf=function(t,e){for(void 0===e&&(e=0);e<this.length;e++)if(this[e]===t)return e;return-1}),function(t){var e=function(t,i){for(var n in i){var o=i[n];if("object"!=typeof o||"nodeType"in o)t[n]=o;else if(void 0!==o.push){void 0===t[n]&&(t[n]=[]);for(var s=0;s<o.length;s++)t[n].push(o[s])}else void 0===t[n]&&(t[n]={}),"object"==typeof t[n]&&e(t[n],o)}return t},n=function i(n){if(this.options={},e(this.options,i.options),void 0!==n){if("object"!=typeof n)throw"The DecafMUD options argument must be an object!";e(this.options,n)}if(this.settings={},e(this.settings,i.settings),this.need=[],this.inbuf=[],this.telopt={},"autodetect"===this.options.language){var o=navigator.language?navigator.language:navigator.userLanguage;this.options.language=o.split("-",1)[0]}return this.id=++i.last_id,i.instances.push(this),this.debugString("Created new instance.","info"),"console"in t&&console.groupCollapsed&&(console.groupCollapsed("DecafMUD["+this.id+"] Provided Options"),console.dir(this.options),console.groupEnd()),"en"!==this.options.language&&this.options.load_language&&this.require("decafmud.language."+this.options.language),this.require("decafmud.interface."+this.options.interface),this.waitLoad(this.initSplash),this};n.instances=[],n.last_id=-1,n.version={major:0,minor:10,micro:0,flag:"beta",toString:function(){return this.major+"."+this.minor+"."+this.micro+(this.flag?"-"+this.flag:"")}},n.prototype.loaded=!1,n.prototype.connecting=!1,n.prototype.connected=!1,n.prototype.loadTimer=null,n.prototype.timer=null,n.prototype.connect_try=0,n.prototype.required=0,(n.plugins={Display:{},Encoding:{},Extra:{},Interface:{},Language:{},Socket:{},Storage:{},Telopt:{},TextInputFilter:{}}).Encoding.iso88591={proper:"ISO-8859-1",decode:function(t){return[t,""]},encode:function(t){return t}},n.plugins.Encoding.utf8={proper:"UTF-8",decode:function(t){try{return[decodeURIComponent(escape(t)),""]}catch(s){for(var e="",i=0,n=t.length,o=c2=c3=c4=0;i<n;)if((o=t.charCodeAt(i++))<128)e+=String.fromCharCode(o);else if(o>191&&o<224){if(i+1>=n)break;e+=String.fromCharCode((31&o)<<6|63&t.charCodeAt(i++))}else if(o>223&&o<240){if(i+2>=n)break;e+=String.fromCharCode((15&o)<<12|(63&t.charCodeAt(i++))<<6|63&t.charCodeAt(i++))}else if(o>239&&o<245){if(i+3>=n)break;e+=String.fromCharCode((10&o)<<18|(63&t.charCodeAt(i++))<<12|(63&t.charCodeAt(i++))<<6|63&t.charCodeAt(i++))}else e+=String.fromCharCode(o);return[e,t.substr(i)]}},encode:function(t){try{return unescape(encodeURIComponent(t))}catch(e){return console.dir(e),t}}},n.prototype.loaded_plugs={},n.ESC="",n.BEL="";var o=n.TN={IAC:"Ã¿",DONT:"Ã¾",DO:"Ã½",WONT:"Ã¼",WILL:"Ã»",SB:"Ãº",SE:"Ã°",IS:"\0",EORc:"Ã¯",GA:"Ã¹",BINARY:"\0",ECHO:"",SUPGA:"",STATUS:"",SENDLOC:"",TTYPE:"",EOR:"",NAWS:"",TSPEED:" ",RFLOW:"!",LINEMODE:'"',AUTH:"#",NEWENV:"'",CHARSET:"*",MSDP:"E",MSSP:"F",COMPRESS:"U",COMPRESSv2:"V",MSP:"Z",MXP:"[",ZMP:"]",CONQUEST:"^",ATCP:"Ãˆ",GMCP:"Ã‰"},s=function(t){var e=n.TN;switch(t){case e.IAC:return"IAC";case e.DONT:return"DONT";case e.DO:return"DO";case e.WONT:return"WONT";case e.WILL:return"WILL";case e.SB:return"SB";case e.SE:return"SE";case e.BINARY:return"TRANSMIT-BINARY";case e.ECHO:return"ECHO";case e.SUPGA:return"SUPPRESS-GO-AHEAD";case e.STATUS:return"STATUS";case e.SENDLOC:return"SEND-LOCATION";case e.TTYPE:return"TERMINAL-TYPE";case e.EOR:return"END-OF-RECORD";case e.NAWS:return"NEGOTIATE-ABOUT-WINDOW-SIZE";case e.TSPEED:return"TERMINAL-SPEED";case e.RFLOW:return"REMOTE-FLOW-CONTROL";case e.AUTH:return"AUTH";case e.LINEMODE:return"LINEMODE";case e.NEWENV:return"NEW-ENVIRON";case e.CHARSET:return"CHARSET";case e.MSDP:return"MSDP";case e.MSSP:return"MSSP";case e.COMPRESS:return"COMPRESS";case e.COMPRESSv2:return"COMPRESSv2";case e.MSP:return"MSP";case e.MXP:return"MXP";case e.ZMP:return"ZMP";case e.CONQUEST:return"CONQUEST-PROPRIETARY";case e.ATCP:return"ATCP";case e.GMCP:return"GMCP"}return(t=t.charCodeAt(0))>15?t.toString(16):"0"+t.toString(16)};n.debugIAC=function(t){for(var e="",i=n.TN,o=0,r=!1,c=t.length,a=s,d=0;d<c;d++){var h=t.charAt(d),u=h.charCodeAt(0);2!==o?3!==o&&4!==o?5!==o?(6===o?h===i.IAC||u>0&&u<8?(r&&(r=!1,e+='" '),h===i.IAC?(e+="IAC ",o=0):1===u?e+="REQUEST ":2===u?e+="ACCEPTED ":3===u?e+="REJECTED ":4===u?e+="TTABLE-IS ":5===u?e+="TTABLE-REJECTED ":6===u?e+="TTABLE-ACK ":7===u&&(e+="TTABLE-NAK ")):(r||(r=!0,e+='"'),e+=h):7===o?h===i.IAC||0===u?(r&&(r=!1,e+='" '),h===i.IAC?(e+="IAC ",o=0):0===u&&(e+="NUL ")):(r||(r=!0,e+='"'),e+=h):o<2&&(e+=a(h)+" "),0===o?h===i.SB&&(o=1):1===o&&(o=h===i.TTYPE||h===i.TSPEED?2:h===i.MSSP?3:h===i.MSDP?4:h===i.NAWS?5:h===i.CHARSET||h===i.SENDLOC||h===i.GMCP?6:h===i.ZMP?7:0)):h===i.IAC?(r=!1,e+="IAC ",o=0):!1===r?r=255*u:(e+=(u+r).toString()+" ",r=!1):h===i.IAC||u>=1&&u<=4?(r&&(r=!1,e+='" '),h===i.IAC?(e+="IAC ",o=0):3===u?e+="MSDP_OPEN ":4===u?e+="MSDP_CLOSE ":(e+=3===o?"MSSP_":"MSDP_",e+=1===u?"VAR ":"VAL ")):(r||(r=!0,e+='"'),e+=h):h===i.ECHO?e+="SEND ":h===i.IS?e+="IS ":h===i.IAC?(r?(r=!1,e+='" IAC '):e+="IAC ",o=0):(r||(r=!0,e+='"'),e+=h)}return e.substr(0,e.length-1)};var r=function(t){this.decaf=t};r.prototype.current=-1,r.prototype._dont=r.prototype.disconnect=function(){this.current=-1},r.prototype._sb=function(t){if(t===o.ECHO)return this.current=(this.current+1)%this.decaf.options.ttypes.length,this.decaf.debugString("RCVD "+n.debugIAC(o.IAC+o.SB+o.TTYPE+o.ECHO+o.IAC+o.SE)),this.decaf.sendIAC(o.IAC+o.SB+o.TTYPE+o.IS+this.decaf.options.ttypes[this.current]+o.IAC+o.SE),!1},n.plugins.Telopt[o.TTYPE]=r;var c=function(t){this.decaf=t};c.prototype._will=function(){this.decaf.ui&&this.decaf.ui.localEcho(!1)},c.prototype._wont=c.prototype.disconnect=function(){this.decaf.ui&&this.decaf.ui.localEcho(!0)},n.plugins.Telopt[o.ECHO]=c;var a=function(t){this.decaf=t};a.prototype.enabled=!1,a.prototype.last=void 0,a.prototype._do=function(){this.last=void 0,this.enabled=!0;var t=this;setTimeout(function(){t.send()},0)},a.prototype._dont=a.prototype.disconnect=function(){this.enabled=!1},a.prototype.send=function(){if(this.decaf.display&&this.enabled){var t=this.decaf.display.getSize();if(void 0===this.last||this.last[0]!=t[0]||this.last[1]!=t[1]){this.last=t;var e=String.fromCharCode(Math.floor(t[0]/255));e+=String.fromCharCode(t[0]%255),e+=String.fromCharCode(Math.floor(t[1]/255)),e+=String.fromCharCode(t[1]%255),e=o.IAC+o.SB+o.NAWS+e.replace(/\xFF/g,"Ã¿Ã¿")+o.IAC+o.SE,this.decaf.sendIAC(e)}}},n.plugins.Telopt[o.NAWS]=a;var d=function(t){this.decaf=t};d.prototype._dont=function(){return!1},d.prototype._will=function(){var t=this;setTimeout(function(){var e=[],i=[];"iso88591"!==(r=this.decaf.options.encoding)&&void 0!==n.plugins.Encoding[r]&&void 0!==n.plugins.Encoding[r].proper&&(e.push(n.plugins.Encoding[r].proper),i.push(r));for(var s=0;s<this.decaf.options.encoding_order.length;s++){var r=this.decaf.options.encoding_order[s];void 0!==n.plugins.Encoding[r]&&void 0!==n.plugins.Encoding[r].proper&&-1===i.indexOf(r)&&(e.push(n.plugins.Encoding[r].proper),i.push(r))}for(var c in n.plugins.Encoding)-1===i.indexOf(c)&&void 0!==n.plugins.Encoding[c].proper&&e.push(n.plugins.Encoding[c].proper);t.decaf.sendIAC(o.IAC+o.SB+o.CHARSET+o.ECHO+" "+e.join(" ")+o.IAC+o.SE)},0)},d.prototype._sb=function(t){if(this.decaf.debugString("RCVD "+n.debugIAC(o.IAC+o.SB+o.CHARSET+t+o.IAC+o.SE)),1===t.charCodeAt(0)){0===(t=t.substr(1)).indexOf("TTABLE ")&&(t=t.substr(8));var e,i=t.charAt(0);for(var s of(t=t.substr(1).split(i),this.decaf.options.encoding_order))if(void 0!==(c=n.plugins.Encoding[s])&&void 0!==c.proper){if(t.includes(s)){e=s,c=s;break}if(t.includes(c.proper)){e=c.proper,c=s;break}}if(void 0===c)for(s=0;s<t.length;s++){for(var r in e=t[s],n.plugins.Encoding)if(e===r||e===n.plugins.Encoding[r].proper){c=r;break}if(c)break}void 0!==c?(this.decaf.setEncoding(c),this.decaf.sendIAC(o.IAC+o.SB+o.CHARSET+""+e+o.IAC+o.SE)):(this.decaf.debugString("No encoder for: "+t.join(i)),this.decaf.sendIAC(o.IAC+o.SB+o.CHARSET+""+o.IAC+o.SE))}else if(2===t.charCodeAt(0)){t=t.substr(1);var c=void 0;for(var r in n.plugins.Encoding)if(n.plugins.Encoding[r].proper===t){c=r;break}void 0!==c&&this.decaf.setEncoding(c)}return!1},n.plugins.Telopt[o.CHARSET]=d;var h=function(t){this.decaf=t,this.decaf.startCompressV2=!1,this.decaf.loadScript("inflate_stream.min.js")};h.prototype._will=function(){return"flash"==this.decaf.options.socket?(this.decaf.debugString("Flash COMPRESSv2 support has not been implemented"),!1):void 0!==Zlib||(this.decaf.debugString("Unable to load Zlib.js for COMPRESSv2 support"),!1)},h.prototype._sb=function(){this.decaf.debugString("RCVD "+n.debugIAC(o.IAC+o.SB+o.COMPRESSv2+o.IAC+o.SE)),this.decaf.startCompressV2=!0},n.plugins.Telopt[o.COMPRESSv2]=h,n.prototype.disableMCCP2=function(){this.sendIAC(o.IAC+o.DONT+o.COMPRESSv2),this.startCompressV2=!1,this.decompressStream=void 0,this.inbuf=[]};var u=/[\x01\x02\x03\x04]/,p=function(t){for(var e={},i=void 0;t.length>0;){var n=t.charCodeAt(0);if(1!==n){if(4===n){t=t.substr(1);break}if(void 0===i)return[e,""];if(2!==n)break;if(3===t.charCodeAt(1)){var o=p(t.substr(2));s=o[0],t=o[1]}else{var s="";-1===(r=t.substr(1).search(u))?(s=t.substr(1),t=""):(s=t.substr(1,r),t=t.substr(r+1))}void 0===e[i]?e[i]=s:"object"==typeof e[i]&&void 0!==e[i].push?e[i].push(s):e[i]=[e[i],s]}else{var r;-1===(r=t.substr(1).search(u))?(i=t.substr(1),t=""):(i=t.substr(1,r),t=t.substr(r+1)),e[i]=void 0}}return[e,t]},l=function(t){var e=typeof t;if("string"===e||"number"===e)return t.toString();if("boolean"===e)return t?"1":"0";if("undefined"===e)return"";if("object"===e){var i="";for(var n in t)if(void 0!==t[n]&&null!==t[n]&&"function"!=typeof t[n])if(i+=""+n,"object"==typeof t[n])if(void 0!==t[n].push)for(var o=t[n],s=t[n].length,r=0;r<s;r++)i+=""+l(o[r]);else void 0===t[n].nodeType&&(i+=""+l(t[n])+"");else i+=""+l(t[n]);return i}return t.toString()},f=function(t){this.decaf=t};f.prototype.connect=function(){this.commands=["LIST"],this.variables=[],this.reportable=[]},f.config_vars={CLIENT_NAME:"decafmud",CLIENT_VERSION:n.version.toString(),PLUGIN_ID:"0",ANSI_COLORS:"1",UTF_8:"1",XTERM_256_COLORS:"1"},f.prototype._will=function(){var t=this;setTimeout(function(){t.decaf.sendIAC(o.IAC+o.SB+o.MSDP+"LISTCOMMANDS"+o.IAC+o.SE),t.decaf.sendIAC(o.IAC+o.SB+o.MSDP+"LISTVARIABLES"+o.IAC+o.SE),t.decaf.sendIAC(o.IAC+o.SB+o.MSDP+"LISTCONFIGURABLE_VARIABLES"+o.IAC+o.SE),t.decaf.sendIAC(o.IAC+o.SB+o.MSDP+"LISTREPORTABLE_VARIABLES"+o.IAC+o.SE)},0)},f.prototype._sb=function(e){var i=p(e)[0],n=!1;if("console"in t&&console.groupCollapsed?(console.groupCollapsed("DecafMUD["+this.decaf.id+"]: RCVD IAC SB MSDP ... IAC SE"),console.dir(i),console.groupEnd("DecafMUD["+this.decaf.id+"]: RCVD IAC SB MSDP ... IAC SE")):n=!0,void 0!==i.COMMANDS)for(var s=0;s<i.COMMANDS.length;s++)this.commands.push(i.COMMANDS[s]);if(void 0!==i.VARIABLES)for(s=0;s<i.VARIABLES.length;s++)this.variables.push(i.VARIABLES[s]);if(void 0!==i.CONFIGURABLE_VARIABLES){var r=i.CONFIGURABLE_VARIABLES,c={};for(s=0;s<r.length;s++)void 0!==f.config_vars[r[s]]&&(c[r[s]]=f.config_vars[r[s]]);this.decaf.sendIAC(o.IAC+o.SB+o.MSDP+l(c)+o.IAC+o.SE)}return n},n.plugins.Telopt[o.MSDP]=f,n.plugins.Telopt[o.BINARY]=!0,n.plugins.Telopt[o.MSSP]="console"in t,void 0===String.prototype.tr&&(String.logNonTranslated="console"in t,String.prototype.tr=function(){var t,e,i,o;if(arguments.length>0&&arguments[0]instanceof n?(t=arguments[0],e=1):(t=n.instances[n.instances.length-1],e=0),"en"===(o=t.options.language))i=this;else if(!n.plugins.Language[o]||!(i=n.plugins.Language[o][this])){if(String.logNonTranslated){var s=n.plugins.Language[o]&&void 0!==n.plugins.Language[o].English?n.plugins.Language[o].English:'"'+o+'"';console.warn("DecafMUD["+t.id+"] i18n: No "+s+" translation for: "+this.replace(/\n/g,"\\n"))}i=this}if(arguments.length-e===1&&"object"==typeof arguments[e]){var r=arguments[e];for(var c in r)i=i.replace("{"+c+"}",r[c])}else r=arguments,i=i.replace(/{(\d+)}/g,function(t){var i=parseInt(t[1])+e;return i<r.length?r[i]:""});return i}),n.prototype.about=function(){var t=["DecafMUD v{0} Â© 2010 Stendec"];t.push("Updated and improved by Pit from Discworld."),t.push("Further bugfixes and improvements by Waba from MUME."),t.push("https://github.com/MUME/DecafMUD\n"),t.push("DecafMUD is a web-based MUD client written in JavaScript, rather than a plugin like Flash or Java, making it load faster and react as you'd expect a website to.\n"),t.push("It's easy to customize as well, using simple CSS and JavaScript, and free to use and modify, so long as your MU* is free to play!"),alert(t.join("\n").tr(this,n.version.toString()))},n.prototype.debugString=function(e,i,n){if(!(!1 in t)&&(void 0===i&&(i="debug"),void 0!==n&&(e=e.tr(this,n)),"console"in t)){var o="DecafMUD[%d]: %s";switch(i){case"info":return void console.info(o,this.id,e);case"warn":return void console.warn(o,this.id,e);case"error":return void console.error(o,this.id,e);default:if("debug"in console)return void console.debug(o,this.id,e);console.log(o,this.id,e)}}},n.prototype.error=function(e){this.debugString(e,"error"),"console"in t&&void 0!==console.groupCollapsed&&(console.groupCollapsed("DecafMUD["+this.id+"] Instance State"),console.dir(this),console.groupEnd()),this.ui&&this.ui.splashError(e)||alert("DecafMUD Error\n\n{0}".tr(this,e))},n.prototype.loadScript=function(t,e){if(void 0===e&&(void 0!==this.options.jslocation&&(e=this.options.jslocation),void 0===e||"string"==typeof e&&0===e.length)){var i=document.querySelector('script[src*="decafmud.js"]');null===i&&(i=document.querySelector('script[src*="decafmud.min.js"]')),null!==i&&(e=i.src.substr(0,i.src.lastIndexOf("/")+1))}var n=document.createElement("script");n.type="text/javascript",n.src=e+t,document.getElementsByTagName("head")[0].appendChild(n),this.debugString("Loading script: "+t)},n.prototype.require=function(t,e){if(this.options.load_language&&"en"!==this.options.language&&-1===t.indexOf("language")&&-1!==t.indexOf("decafmud")&&((i=t.split(".")).splice(1,0,"language",this.options.language),this.require(i.join("."))),void 0===e){if(0!==t.toLowerCase().indexOf("decafmud"))throw"Can't build checker for non-DecafMUD module!";var i;if((i=t.split(".")).length<2)return;if(i.shift(),i[0]=i[0][0].toUpperCase()+i[0].substr(1),"Telopt"===i[0])for(var o in n.TN)if(i[1].toUpperCase()===o.toUpperCase()){i[1]=n.TN[o];break}e=function(){return!(void 0===n.plugins[i[0]]||i.length>1&&void 0===n.plugins[i[0]][i[1]])}}this.required++,e.call(this)||(this.loadScript(t+".js"),this.need.push([t,e]))},n.prototype.waitLoad=function(t,e,i){if(clearTimeout(this.loadTimer),void 0===i)i=0;else if(i>this.options.wait_tries){if(-1===this.need[0][0].indexOf("language"))return void this.error("Timed out attempting to load the module: {0}".tr(this,this.need[0][0]));void 0!==e&&(this.need.length>1?e.call(this,this.need[0][0],this.need[1][0]):e.call(this,this.need[0][0])),this.need.shift(),i=0}for(;this.need.length;)if("string"==typeof this.need[0])this.need.shift();else{if(!this.need[0][1].call(this))break;void 0!==e&&(this.need.length>1?e.call(this,this.need[0][0],this.need[1][0]):e.call(this,this.need[0][0])),this.need.shift(),i=0}if(0===this.need.length)t.call(this);else{var n=this;this.loadTimer=setTimeout(function(){n.waitLoad(t,e,i+1)},this.options.wait_delay)}},n.prototype.initSplash=function(){void 0!==this.options.interface&&(this.debugString('Attempting to initialize the interface plugin "{0}".'.tr(this,this.options.interface)),this.ui=new n.plugins.Interface[this.options.interface](this),this.ui.initSplash()),this.extra=3,this.require("decafmud.storage."+this.options.storage),this.require("decafmud.socket."+this.options.socket),this.require("decafmud.encoding."+this.options.encoding),this.ui&&this.need.length>0&&this.updateSplash(null,this.need[0][0],0),this.waitLoad(this.initSocket,this.updateSplash)},n.prototype.updateSplash=function(t,e,i){if(this.ui){if(void 0===i&&(i=Math.min(100,Math.floor((this.extra+this.required-this.need.length)/(this.required+this.extra)*100))),!0===t);else if(void 0!==e)if(0===e.indexOf("decafmud")){var n=e.split(".");e='Loading the {0} module "{1}"...'.tr(this,n[1],n[2])}else e="Loading: {0}".tr(this,e);else 100==i&&(e="Loading complete.".tr(this));this.ui.updateSplash(i,e)}},n.prototype.initSocket=function(){this.extra=1,this.store=new n.plugins.Storage[this.options.storage](this),this.storage=this.store,this.ui&&(this.need.push("."),this.updateSplash(!0,"Initializing the user interface...".tr(this)),this.ui.load()),this.debugString('Creating a socket using the "{0}" plugin.'.tr(this,this.options.socket)),this.socket=new n.plugins.Socket[this.options.socket](this),this.socket.setup(0),this.waitLoad(this.initUI,this.updateSplash)},n.prototype.initUI=function(){this.ui&&this.ui.setup();for(var t=0;t<this.options.plugins.length;t++)this.require("decafmud."+this.options.plugins[t]);this.waitLoad(this.initFinal,this.updateSplash)},n.prototype.initFinal=function(){var t,e;for(var i in this.need.push("."),this.updateSplash(!0,"Initializing triggers system..."),this.need.shift(),this.need.push("."),this.updateSplash(!0,"Initializing TELNET extensions..."),n.plugins.Telopt)e=n.plugins.Telopt[i],this.telopt[i]="function"==typeof e?new e(this):e;this.need.push("."),this.updateSplash(!0,"Initializing filters..."),(t=n.plugins.TextInputFilter[this.options.textinputfilter])&&(this.textInputFilter=new t(this)),this.loaded=!0,this.ui.endSplash(),this.options.autoconnect&&this.socket.ready&&this.connect()},n.prototype.connect=function(){if(!this.connecting&&!this.connected){if(!0!==this.socket_ready)throw"The socket isn't ready yet.";this.connecting=!0,this.connect_try=0,this.debugString("Attempting to connect...","info"),this.ui&&this.ui.connecting&&this.ui.connecting();var t=this;this.conn_timer=setTimeout(function(){t.connectFail()},this.options.connect_timeout),this.socket.connect()}},n.prototype.connectFail=function(){if(clearTimeout(this.conn_timer),this.cconnect_try+=1,!(this.connect_try>this.options.reconnect_tries)){this.socket.close(),this.socket.connect();var t=this;this.conn_timer=setTimeout(function(){t.connectFail()},this.options.connect_timeout)}},n.prototype.reconnect=function(){this.connect_try++;var t=this;t.ui&&t.ui.connecting&&t.ui.connecting(),t.socket.connect()},n.prototype.socketReady=function(){this.debugString("The socket is ready."),this.socket_ready=!0,this.loaded&&this.options.autoconnect&&this.connect()},n.prototype.socketConnected=function(){this.connecting=!1,this.connected=!0,this.connect_try=0,clearTimeout(this.conn_timer);var t=this.socket.host,e=this.socket.port;for(var i in this.debugString("The socket has connected successfully to {0}:{1}.".tr(this,t,e),"info"),this.telopt)this.telopt[i]&&this.telopt[i].connect&&this.telopt[i].connect();this.textInputFilter&&this.textInputFilter.connected(),this.ui&&this.ui.connected&&this.ui.connected()},n.prototype.socketClosed=function(){for(var t in clearTimeout(this.conn_timer),this.connecting=!1,this.connected=!1,this.debugString("The socket has disconnected.","info"),this.telopt)this.telopt[t]&&this.telopt[t].disconnect&&this.telopt[t].disconnect();if(this.inbuf=[],this.decompressStream=void 0,this.startCompressV2=!1,this.options.autoreconnect&&(this.connect_try++,this.connect_try<this.options.reconnect_tries)){this.ui&&this.ui.disconnected&&this.ui.disconnected(!0);var e=this,i=this.options.reconnect_delay/1e3;return this.ui&&this.ui.immediateInfoBar&&i>=.25&&this.ui.immediateInfoBar("You have been disconnected. Reconnecting in {0} second{1}...".tr(this,i,1===i?"":"s"),"reconnecting",i,void 0,[["Reconnect Now".tr(this),function(){clearTimeout(e.timer),e.socket.connect()}]],void 0,function(){clearTimeout(e.timer)}),void(this.timer=setTimeout(function(){e.debugString("Attempting to connect...","info"),e.ui&&e.ui.connecting&&e.ui.connecting(),e.socket.connect()},this.options.reconnect_delay))}this.ui&&this.ui.disconnected&&this.ui.disconnected(!1)},n.prototype.socketData=function(t){if(void 0!==this.decompressStream)try{t=this.decompressStream.decompress(t)}catch(t){return this.error("MCCP2 compression disabled because "+t),void this.disableMCCP2()}this.inbuf.push(t),this.loaded&&this.processBuffer()},n.prototype.socketError=function(t,e){this.debugString('Socket Err: {0}  d2="{1}"'.tr(this,t,e),"error")},n.prototype.getEnc=function(t){return t.replace(/-/g,"").toLowerCase()},n.prototype.setEncoding=function(t){if(t=this.getEnc(t),void 0===n.plugins.Encoding[t])throw'"'+t+"' isn't a valid encoding scheme, or it isn't loaded.";this.debugString("Switching to character encoding: "+t),this.options.encoding=t,this.decode=n.plugins.Encoding[t].decode,this.encode=n.plugins.Encoding[t].encode};var g=/\xFF/g;n.prototype.sendInput=function(t){this.socket&&this.socket.connected?(this.socket.write(this.encode(t+"\r\n").replace(g,"Ã¿Ã¿")),this.ui&&this.ui.displayInput(t)):this.debugString("Cannot send input: not connected")},n.prototype.decode=function(t){return n.plugins.Encoding[this.options.encoding].decode(t)},n.prototype.encode=function(t){return n.plugins.Encoding[this.options.encoding].encode(t)},n.prototype.processBuffer=function(){var t,e,o,s;for(i of(e=[],this.inbuf))"string"!=typeof i?e.push(Array.from(i).map(t=>String.fromCharCode(t)).join("")):e.push(i);e=e.join("");var r=n.TN.IAC,c="";for(this.inbuf=[];e.length>0;){if(-1===(o=e.indexOf(r))){t=this.decode(e),this.handleInputText(t[0]),this.inbuf.splice(1,0,t[1]);break}if(o>0&&(t=this.decode(e.substr(0,o)),this.handleInputText(t[0]),c=t[1],e=e.substr(o)),s=this.readIAC(e),this.startCompressV2)try{this.startCompressV2=!1,this.decompressStream=new Zlib.InflateStream;var a=s.split("").map(t=>t.charCodeAt(0));s=Array.from(this.decompressStream.decompress(a)).map(t=>String.fromCharCode(t)).join("")}catch(t){this.error("MCCP2 compression disabled because "+t),this.disableMCCP2()}if(!1===s){this.inbuf.splice(1,0,c+e);break}e=c+s}},n.prototype.handleInputText=function(t){this.textInputFilter&&(t=this.textInputFilter.filterInputText(t)),this.display&&this.display.handleData(t)},n.prototype.readIAC=function(t){if(t.length<2)return!1;if(255===t.charCodeAt(1))return this.display.handleData("Ã¿"),t.substr(2);if(249===t.charCodeAt(1)||241===t.charCodeAt(1))return t.substr(2);if(-1!=="Ã»Ã¼Ã½Ã¾".indexOf(t.charAt(1))){if(t.length<3)return!1;var e=t.substr(0,3);return this.debugString("RCVD "+n.debugIAC(e)),this.handleIACSimple(e),t.substr(3)}if(t.charAt(1)===o.SB){e="";var i=o.IAC+o.SE,s=t.charAt(2);if(0===(t=t.substr(3)).length)return!1;for(;t.length>0;){var r=t.indexOf(i);if(-1===r)return!1;if(!(r>0&&t.charAt(r-1)===o.IAC)){e+=t.substr(0,r),t=t.substr(r+1);break}e+=t.substr(0,r+1),t=t.substr(r+1)}var c=!0;void 0!==this.telopt[s]&&void 0!==this.telopt[s]._sb&&!1===this.telopt[s]._sb(e)&&(c=!1),c&&(s===o.MSSP&&void 0!==console.groupCollapsed?(console.groupCollapsed("DecafMUD["+this.id+"]: RCVD IAC SB MSSP ... IAC SE"),console.dir(p(e)[0]),console.groupEnd("DecafMUD["+this.id+"]: RCVD IAC SB MSSP ... IAC SE")):this.debugString("RCVD "+n.debugIAC(o.IAC+o.SB+s+e+o.IAC+o.SE)))}return t.substr(1)},n.prototype.sendIAC=function(t){this.debugString("SENT "+n.debugIAC(t)),this.socket&&this.socket.write(t)},n.prototype.handleIACSimple=function(t){var e=n.TN,i=this.telopt[t.charAt(2)],o=t.charAt(2);if(void 0!==i)switch(t.charAt(1)){case e.DO:return void(i._do&&!1===i._do()||this.sendIAC(e.IAC+e.WILL+o));case e.DONT:return void(i._dont&&!1===i._dont()||this.sendIAC(e.IAC+e.WONT+o));case e.WILL:return void(i._will&&!1===i._will()||this.sendIAC(e.IAC+e.DO+o));case e.WONT:return void(i._wont&&!1===i._wont()||this.sendIAC(e.IAC+e.DONT+o))}else t.charAt(1)===e.DO?this.sendIAC(e.IAC+e.WONT+o):t.charAt(1)===e.WILL&&this.sendIAC(e.IAC+e.DONT+o)},n.prototype.requestPermission=function(t,e,i){var n=this.store.get(t);if(null==n){var o=this;this.ui&&this.ui.infoBar&&this.ui.infoBar(e,"permission",0,void 0,[["Allow".tr(this),function(){o.store.set(t,!0),i.call(o,!0)}],["Deny".tr(this),function(){o.store.set(t,!1),i.call(o,!1)}]],void 0,function(t){i.call(o,!1)})}else i.call(this,!!n)},n.settings={startup:{_path:"/",_desc:"Control what happens when DecafMUD is opened.",autoconnect:{_type:"boolean",_desc:"Automatically connect to the server."},autoreconnect:{_type:"boolean",_desc:"Automatically reconnect when the connection is lost."}},appearance:{_path:"display/",_desc:"Control the appearance of the client.",font:{_type:"font",_desc:"The font to display MUD output in."}}},n.options={host:void 0,port:4e3,autoconnect:!0,connectonsend:!0,autoreconnect:!0,connect_timeout:5e3,reconnect_delay:5e3,reconnect_tries:3,storage:"standard",display:"standard",encoding:"utf8",socket:"flash",interface:"simple",language:"autodetect",textinputfilter:"",jslocation:void 0,wait_delay:25,wait_tries:1e3,load_language:!0,plugins:[],set_storage:{},set_display:{handlecolor:!0,fgclass:"c",bgclass:"b",fntclass:"fnt",inputfg:"-7",inputbg:"-0"},set_socket:{policyport:void 0,swf:"/media/DecafMUDFlashSocket.swf",wsport:void 0,wspath:""},set_interface:{container:void 0,start_full:!1,mru:!0,mru_size:15,multiline:!0,clearonsend:!1,focusinput:!0,repeat_input:!0,blurclass:"mud-input-blur",msg_connect:"Press Enter to connect and type here...",msg_connecting:"DecafMUD is attempting to connect...",msg_empty:"Type commands here, or use the Up and Down arrows to browse your recently used commands.",connect_hint:!0},ttypes:["decafmud-"+n.version,"decafmud","xterm","unknown"],environ:{},encoding_order:["utf8"],plugin_order:[]},t.DecafMUD=n}(window);