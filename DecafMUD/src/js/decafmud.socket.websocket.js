/*! For license information please see decafmud.socket.websocket.js.LICENSE.txt */
!function(t){var e=function(t){this.decaf=t};e.prototype.host=void 0,e.prototype.port=void 0,e.prototype.ssl=void 0,e.prototype.connected=!1,e.prototype.ready=!1,e.prototype.websocket=null,e.prototype.setup=function(){if("WebSocket"in window)return this.ready=!0,void this.decaf.socketReady(this);clearTimeout(this.decaf.timer),this.decaf.error("Unable to create a WebSocket. Does your browser support them? If not, try {0}.".tr(this.decaf,'<a href="http://www.google.com/chrome" target="_blank">Google Chrome</a>'))},e.prototype.connect=function(){this.connected&&this.websocket&&(this.websocket.close(),this.websocket=null);var t=this.port;void 0===t&&(((t=this.decaf.options.set_socket.wsport)<1||t>65535)&&(t=this.decaf.options.set_socket.policyport),void 0===t&&(t=843),this.port=t);var e=this.decaf.options.set_socket.wspath;void 0===e&&(e="port_"+this.decaf.options.port);var o=this.host;void 0===o&&((o=this.decaf.options.host)||(o=document.location.host),this.host=o);var s=this.ssl;void 0===s&&(void 0===(s=this.decaf.options.set_socket.ssl)&&(s=!1),this.ssl=s);var i="ws"+(s?"s":"")+"://"+o+":"+t+"/"+e;this.decaf.debugString("WebSocket Connection String: "+i),this.websocket=new WebSocket(i,"binary"),this.websocket.onopen=this.onOpen.bind(this,this.websocket),this.websocket.onclose=this.onClose.bind(this,this.websocket),this.websocket.onmessage=this.onMessage.bind(this,this.websocket)},e.prototype.close=function(){this.connected=!1,this.websocket&&(this.websocket.close(),this.websocket=null)},e.prototype.assertConnected=function(){if(!this.connected||!this.websocket)throw"DecafMUD is not currently connected."},e.prototype.write=function(t){this.assertConnected();for(var e=new Array(t.length),o=0;o<t.length;o++)e[o]=t.charCodeAt(o);var s=new Uint8Array(e).buffer;this.websocket.send(s)},e.prototype.onOpen=function(t,e){1===t.readyState&&(this.connected=!0,this.decaf.socketConnected())},e.prototype.onClose=function(t,e){this.connected&&(this.connected=!1,this.decaf.socketClosed(),this.websocket==t&&(this.websocket=null))},e.prototype.onMessage=function(t,e){var o=new FileReader;o.onload=function(t){this.decaf.socketData(new Uint8Array(t.target.result))}.bind(this),o.readAsArrayBuffer(e.data)},t.plugins.Socket.websocket=e}(DecafMUD);